/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MyController', {
    extend: 'Ext.app.Controller',

    stores: [
        'MyJsonStore'
    ],

    onButtonClick: function(button, e, eOpts) {
        var wind = new MyApp.view.MyWindow();
        wind.modal = true;
        wind.show();
        Ext.ComponentQuery.query('#update')[0].setVisible(false);
    },

    onButtonClick1: function(button, e, eOpts) {
        var record = Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().getSelection()[0];
        if (!record){
            return false;
        }
        Ext.Msg.confirm("Confirmation", "Do you really want to delete the job?", function(btnText){
            if(btnText === "no"){
                return false;
            }
            else if(btnText === "yes"){
                Ext.getStore("MyJsonStore").remove(record);
            }
        }, this);

    },

    onButtonClick2: function(button, e, eOpts) {
        if (Ext.ComponentQuery.query('#form')[0].isValid() === false){
        	return false
        }
        var values = Ext.ComponentQuery.query('#form')[0].getValues();
        Ext.getStore("MyJsonStore").add(values);
        Ext.ComponentQuery.query('#window')[0].close();
        Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().clearSelections()

    },

    onButtonClick3: function(button, e, eOpts) {
        var wind = new MyApp.view.MyWindow();
        wind.modal = true;
        wind.show();
        Ext.ComponentQuery.query('#save')[0].setVisible(false);
        var record = Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().getSelection()[0];
        if (!record){
        	wind.close();
            return false;
        }
        wind.down('form').loadRecord(record);
    },

    onButtonClick4: function(button, e, eOpts) {
        if (Ext.ComponentQuery.query('#form')[0].isValid() === false){
            return false
        }
        var record = Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().getSelection()[0];
        var values = Ext.ComponentQuery.query('#form')[0].getValues();
        record.set(values);
        Ext.ComponentQuery.query('#window')[0].close();
        Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().clearSelections()

    },

    onButtonClick5: function(button, e, eOpts) {
        var record = Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().getSelection()[0];
        if (!record){
            return false;
        }
        Ext.MessageBox.show({
          msg: 'Running the job, please wait...',
          progressText: 'Saving...',
          width:300,
          wait:true,
          waitConfig: {interval:200}
        });

        Ext.Ajax.request({
            url: '/controllers/job/run/' + record.data.id,
            success: function(response){
                Ext.MessageBox.hide();
                Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().clearSelections()
                Ext.getStore("MyJsonStore").reload();
            }
        });

    },

    onButtonClick6: function(button, e, eOpts) {
        Ext.ComponentQuery.query('viewport')[0].down('grid').getSelectionModel().clearSelections()
        Ext.getStore("MyJsonStore").reload();
    },

    init: function(application) {
        this.control({
            "button#new": {
                click: this.onButtonClick
            },
            "button#delete": {
                click: this.onButtonClick1
            },
            "button#save": {
                click: this.onButtonClick2
            },
            "button#edit": {
                click: this.onButtonClick3
            },
            "button#update": {
                click: this.onButtonClick4
            },
            "button#run": {
                click: this.onButtonClick5
            },
            "button#reload": {
                click: this.onButtonClick6
            }
        });
    }

});
