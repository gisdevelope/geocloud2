{
    "openapi": "3.0.0",
    "info": {
        "title": "GC2 API",
        "contact": {
            "email": "mh@mapcentia.com"
        },
        "version": "2.0.0"
    },
    "paths": {
        "/api/v2/configuration/{userId}": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Returns all configurations (unpublished configurations are returned if authorized user is the author)",
                "operationId": "app\\api\\v2\\Configuration::get_all",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                }
            }
        },
        "/api/v2/configuration/{userId}/{configurationId}": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Returns specific configuration (unpublished configuration is returned if authorized user is the author)",
                "operationId": "app\\api\\v2\\Configuration::get_specific",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "configurationId",
                        "in": "path",
                        "description": "Configuration id (key)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Deletes configuration",
                "operationId": "app\\api\\v2\\Configuration::delete_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "configurationId",
                        "in": "path",
                        "description": "Configuration id (key)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/api/v2/configuration/{userId}/": {
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Creates configuration",
                "operationId": "app\\api\\v2\\Configuration::post_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Configuration data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "published": {
                                        "type": "boolean"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "body": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/apiv2/configuration/{userId}/{configurationId}": {
            "put": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Creates configuration",
                "operationId": "app\\api\\v2\\Configuration::put_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "configurationId",
                        "in": "path",
                        "description": "Configuration id (key)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Configuration data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "published": {
                                        "type": "boolean"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "body": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/api/v2/database/schemas": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Returns available schemas",
                "operationId": "app\\api\\v2\\Database::get_schemas",
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/api/v2/database/search": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Returns databases found according to provided filters",
                "operationId": "app\\api\\v2\\Database::get_search",
                "parameters": [
                    {
                        "name": "userIdentifier",
                        "in": "query",
                        "description": "Filters databases that have user with specified name registered",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                }
            }
        },
        "/api/v2/keyvalue/{userId}/{key}": {
            "get": {
                "tags": [
                    "Keyvalue"
                ],
                "summary": "Get value by key",
                "operationId": "app\\api\\v2\\Keyvalue::get_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key to fetch",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Keyvalue"
                ],
                "summary": "Update value in store",
                "operationId": "app\\api\\v2\\Keyvalue::put_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New JSON value to store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Keyvalue"
                ],
                "summary": "Create new key/value in store",
                "operationId": "app\\api\\v2\\Keyvalue::post_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key to create",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "JSON value to store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Keyvalue"
                ],
                "summary": "Delete a key/bvalue in store",
                "operationId": "app\\api\\v2\\Keyvalue::delete_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "my_key"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/session/start": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Starts the session",
                "operationId": "app\\api\\v2\\Session::get_start",
                "parameters": [
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "schema",
                        "in": "query",
                        "description": "Schema",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                }
            },
            "post": {
                "tags": [
                    "Session"
                ],
                "summary": "Starts the session",
                "operationId": "app\\api\\v2\\Session::post_start",
                "requestBody": {
                    "description": "Credentials",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "schema": {
                                        "type": "string"
                                    },
                                    "database": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                }
            }
        },
        "/api/v2/session": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Checks the session",
                "operationId": "app\\api\\v2\\Session::get_index",
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                }
            }
        },
        "/api/v2/session/stop": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Destroys the session",
                "operationId": "app\\api\\v2\\Session::get_stop",
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                }
            }
        },
        "/api/v2/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Creates user",
                "operationId": "app\\api\\v2\\User::post_index",
                "requestBody": {
                    "description": "User data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "1234Luggage"
                                    },
                                    "subuser": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "usergroup": {
                                        "type": "string",
                                        "example": "My group"
                                    },
                                    "parentdb": {
                                        "type": "string",
                                        "example": "mydatabase"
                                    },
                                    "properties": {
                                        "type": "object",
                                        "example": {
                                            "org": "Ajax Inc."
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/api/v2/user/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Returns extended information about user (meta, schemas, groups). User data is available only for the actual user and his superuser",
                "operationId": "app\\api\\v2\\User::get_default",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updates user information. User can only update himself or its subuser.",
                "operationId": "app\\api\\v2\\User::put_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "currentPassword": {
                                        "type": "string",
                                        "example": "1234Luggage"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "1234Luggage"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "usergroup": {
                                        "type": "string",
                                        "example": "My group"
                                    },
                                    "properties": {
                                        "type": "object",
                                        "example": {
                                            "org": "Ajax Inc."
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Deletes user. User can only delete himself or be deleted by its superuser.",
                "operationId": "app\\api\\v2\\User::delete_index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/api/v2/user/{userId}/subusers": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Returns subusers",
                "operationId": "app\\api\\v2\\User::get_subusers",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation status"
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "name": "PHPSESSID",
                "in": "cookie"
            }
        }
    }
}